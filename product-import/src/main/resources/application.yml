logging:
  level:
    "[org.springframework]": INFO
    "[root]": INFO
spring:
  application:
    name: product-import
#  main:
#    lazy-initialization: true
  data:
    jpa:
      repositories:
        bootstrap-mode: lazy
  jpa:
    database: mysql
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        "[physical_naming_strategy]": "com.luanvv.microservices.bookstore.product_import.configuration.UpperPhysicalNamingStrategy"
        "[generate_statistics]": false
        "[order_inserts]": true
        "[order_updates]": true
        "[format_sql]": true
    show-sql: true
  liquibase:
    enabled: true
    change-log: classpath:/db/changelog/changelog-master.xml
    database-change-log-lock-table: DATABASECHANGELOGLOCK
    database-change-log-table: DATABASECHANGELOG
  datasource:
    url: jdbc:mysql://localhost:33060/BOOKSTORE?useSSL=false&serverTimezone=UTC
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: root
    password: bookRoot
  cloud:
    function:
      definition: processBookManipulation
    stream:
      kafka:
        streams:
          binder:
            configuration:
              default.key.serde: org.apache.kafka.common.serialization.Serdes$StringSerde
              default.value.serde: org.apache.kafka.common.serialization.Serdes$StringSerde
              commit.interval.ms: 1000

      bindings:
        processBookManipulation-in-0:
          content-type: 'application/json'
          destination: ${BOOK_EVENT_TOPIC:com.luanvv.bookstoremicroservices.book.save.event}
          consumer.valueSerde: JsonSerde
  kafka:
    bootstrap-servers: ${KAFKA_SERVERS:localhost:9092}